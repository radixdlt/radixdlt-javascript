{
    "openrpc": "1.0.0-rc1",
    "info": {
        "title": "Radix Core JSON-RPC API",
        "version": "1.0.0"
    },
    "methods": [
        {
            "name": "radix.networkId",
            "summary": "Get the network id, a number that uniquely identifies the network. This network id must match the one used to derive addresses.",
            "params": [],
            "result": {
                "name": "networkId",
                "schema": {
                    "type": "object",
                    "properties": {
                        "networkId": {
                            "$ref": "#/components/schemas/networkId"
                        }
                    },
                    "required": [
                        "networkId"
                    ],
                    "additionalProperties": false
                }
            }
        },
        {
            "name": "radix.nativeToken",
            "summary": "Returns information about the native token of the network.",
            "params": [],
            "result": {
                "$ref": "#/components/responses/tokenInfo"
            },
            "examples": [
                {
                    "name": "nativeTokenExamples",
                    "params": [],
                    "result": {
                        "name": "nativeTokenExample",
                        "value": {
                            "name": "Rad",
                            "rri": "xrd_rb1qya85pwq",
                            "symbol": "XRD",
                            "description": "The native token of the Radix network",
                            "granularity": "1",
                            "isSupplyMutable": false,
                            "currentSupply": "2147483648",
                            "tokenInfoURL": "http://www.radixdlt.com",
                            "iconURL": "http://www.image.radixdlt.com"
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.tokenInfo",
            "summary": "Return token information on the provided RRI.",
            "params": [
                {
                    "name": "rri",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/rri"
                    }
                }
            ],
            "result": {
                "$ref": "#/components/responses/tokenInfo"
            },
            "examples": [
                {
                    "name": "tokenInfoExamples",
                    "params": [],
                    "result": {
                        "name": "tokenInfoExample",
                        "value": {
                            "name": "Rad",
                            "rri": "xrd_rb1qya85pwq",
                            "symbol": "XRD",
                            "description": "The native token of the Radix network",
                            "granularity": "1",
                            "isSupplyMutable": false,
                            "currentSupply": "2147483648",
                            "tokenInfoURL": "http://www.radixdlt.com",
                            "iconURL": "http://www.image.radixdlt.com"
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.tokenBalances",
            "summary": "Get the token balances for an address.",
            "params": [
                {
                    "name": "address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                }
            ],
            "result": {
                "name": "tokenBalances",
                "schema": {
                    "type": "object",
                    "properties": {
                        "owner": {
                            "$ref": "#/components/schemas/address"
                        },
                        "tokenBalances": {
                            "type": "array",
                            "items": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "rri": {
                                            "$ref": "#/components/schemas/rri"
                                        },
                                        "amount": {
                                            "$ref": "#/components/schemas/amount"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "rri",
                                        "amount"
                                    ]
                                }
                            ]
                        }
                    },
                    "required": [
                        "owner",
                        "tokenBalances"
                    ],
                    "additionalProperties": false
                }
            },
            "examples": [
                {
                    "name": "tokenBalancesExamples",
                    "params": [],
                    "result": {
                        "name": "tokenBalancesExample",
                        "value": {
                            "owner": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                            "tokenBalances": [
                                {
                                    "rri": "xrd_rb1qya85pwq",
                                    "amount": "100"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.transactionHistory",
            "summary": "Get the paginated transaction history for an address.",
            "params": [
                {
                    "name": "address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                },
                {
                    "name": "size",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                {
                    "name": "cursor",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "transactionHistory",
                "schema": {
                    "type": "object",
                    "properties": {
                        "cursor": {
                            "type": "string"
                        },
                        "transactions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/transaction"
                            }
                        }
                    },
                    "required": [
                        "cursor",
                        "transactions"
                    ],
                    "additionalProperties": false
                }
            },
            "examples": [
                {
                    "name": "transactionHistoryExamples",
                    "params": [],
                    "result": {
                        "name": "transactionHistoryExample",
                        "value": {
                            "cursor": "cursor",
                            "transactions": [
                                {
                                    "txID": "deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                                    "sentAt": "1995-12-17T03:24:00",
                                    "fee": "100",
                                    "message": "Example message",
                                    "actions": [
                                        {
                                            "type": "TokenTransfer",
                                            "from": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                            "to": "brx1qsp0mejfswrmcy5xf9up2ve7zez7w2th0fw4ne8js0u0q22vya7kg8getv7av",
                                            "amount": "100",
                                            "rri": "xrd_rb1qya85pwq"
                                        },
                                        {
                                            "type": "StakeTokens",
                                            "from": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                            "validator": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                            "amount": "100"
                                        },
                                        {
                                            "type": "UnstakeTokens",
                                            "from": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                            "validator": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                            "amount": "100"
                                        },
                                        {
                                            "type": "Other"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.lookupTransaction",
            "summary": "Get a transaction from its txID.",
            "params": [
                {
                    "name": "txID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/txID"
                    }
                }
            ],
            "result": {
                "name": "transaction",
                "schema": {
                    "$ref": "#/components/schemas/transaction"
                }
            },
            "examples": [
                {
                    "name": "lookupTransactionExamples",
                    "params": [],
                    "result": {
                        "name": "lookupTransactionExample",
                        "value": {
                            "txID": "deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                            "sentAt": "1995-12-17T03:24:00",
                            "fee": "100",
                            "message": "Example message",
                            "actions": [
                                {
                                    "type": "TokenTransfer",
                                    "from": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                    "to": "brx1qsp0mejfswrmcy5xf9up2ve7zez7w2th0fw4ne8js0u0q22vya7kg8getv7av",
                                    "amount": "100",
                                    "rri": "xrd_rb1qya85pwq"
                                },
                                {
                                    "type": "StakeTokens",
                                    "from": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                    "validator": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                    "amount": "100"
                                },
                                {
                                    "type": "UnstakeTokens",
                                    "from": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                    "validator": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                    "amount": "100"
                                },
                                {
                                    "type": "Other"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.stakePositions",
            "summary": "Get stakes that have not been requested to be unstaked.",
            "params": [
                {
                    "name": "address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                }
            ],
            "result": {
                "name": "stakePositions",
                "schema": {
                    "type": "array",
                    "items": [
                        {
                            "type": "object",
                            "properties": {
                                "validator": {
                                    "$ref": "#/components/schemas/address"
                                },
                                "amount": {
                                    "$ref": "#/components/schemas/amount"
                                }
                            },
                            "required": [
                                "validator",
                                "amount"
                            ],
                            "additionalProperties": false
                        }
                    ]
                }
            },
            "examples": [
                {
                    "name": "stakePositionsExamples",
                    "params": [],
                    "result": {
                        "name": "stakePositionsExample",
                        "value": [
                            {
                                "validator": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                "amount": "100"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "radix.unstakePositions",
            "summary": "Get unstake history for an address.",
            "params": [
                {
                    "name": "address",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/address"
                    }
                }
            ],
            "result": {
                "name": "unstakePositions",
                "schema": {
                    "type": "array",
                    "items": [
                        {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "$ref": "#/components/schemas/amount"
                                },
                                "validator": {
                                    "$ref": "#/components/schemas/address"
                                },
                                "epochsUntil": {
                                    "type": "integer"
                                },
                                "withdrawTxID": {
                                    "$ref": "#/components/schemas/txID"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "amount",
                                "validator",
                                "epochsUntil",
                                "withdrawTxID"
                            ]
                        }
                    ]
                }
            },
            "examples": [
                {
                    "name": "unstakePositionsExamples",
                    "params": [],
                    "result": {
                        "name": "unstakePositionsExample",
                        "value": [
                            {
                                "amount": "100",
                                "validator": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                "epochsUntil": 1000,
                                "withdrawTxID": "deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "radix.statusOfTransaction",
            "summary": "Returns the status of a transaction.",
            "params": [
                {
                    "name": "txID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/txID"
                    }
                }
            ],
            "result": {
                "name": "transactionStatus",
                "schema": {
                    "type": "object",
                    "properties": {
                        "txID": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "CONFIRMED",
                                "FAILED"
                            ]
                        },
                        "failure": {
                            "type": "string",
                            "enum": [
                                "TRANSACTION_NOT_FOUND"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "txID",
                        "status"
                    ]
                }
            },
            "examples": [
                {
                    "name": "txStatusExamples",
                    "params": [],
                    "result": {
                        "name": "txStatusExample",
                        "value": {
                            "txID": "deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                            "status": "CONFIRMED"
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.networkTransactionThroughput",
            "summary": "Returns the average transaction per second in the network.",
            "params": [],
            "result": {
                "name": "networkTransactionThroughput",
                "schema": {
                    "type": "object",
                    "properties": {
                        "tps": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "tps"
                    ]
                }
            }
        },
        {
            "name": "radix.networkTransactionDemand",
            "summary": "Average transactions submitted to the mempool per second.",
            "params": [],
            "result": {
                "name": "networkTransactionDemand",
                "schema": {
                    "type": "object",
                    "properties": {
                        "tps": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "tps"
                    ]
                }
            }
        },
        {
            "name": "radix.validators",
            "summary": "Get a paginated validator list, ordered by XRD staked descending.",
            "params": [
                {
                    "name": "size",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                {
                    "name": "cursor",
                    "required": false,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "result": {
                "name": "validatorsResponse",
                "schema": {
                    "type": "object",
                    "properties": {
                        "cursor": {
                            "type": "string"
                        },
                        "validators": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/validator"
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "cursor",
                        "validators"
                    ]
                }
            },
            "examples": [
                {
                    "name": "validatorsExamples",
                    "params": [],
                    "result": {
                        "name": "validatorsExample",
                        "value": {
                            "cursor": "cursor",
                            "validators": [
                                {
                                    "address": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                                    "ownerAddress": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                                    "name": "Cerby",
                                    "infoURL": "http://www.radixdlt.com",
                                    "totalDelegatedStake": "100",
                                    "ownerDelegation": "100",
                                    "isExternalStakeAccepted": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.lookupValidator",
            "summary": "Lookup a single validator by its validator address.",
            "params": [
                {
                    "name": "validatorAddress",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/validatorAddress"
                    }
                }
            ],
            "result": {
                "name": "lookupValidatorResponse",
                "schema": {
                    "$ref": "#/components/schemas/validator"
                }
            },
            "examples": [
                {
                    "name": "lookupValidatorExample",
                    "params": [],
                    "result": {
                        "name": "lookupValidatorExample",
                        "value": {
                            "address": "vb1qvx0emaq0tua6md7wu9c047mm5krrwnlfl8c7ws3jm2s9uf4vxcyvrwrazy",
                            "ownerAddress": "brx1qspqljn9rg7x97s3rcvyzal2uxr5q22d9xn8nc4rpq8vq08kg4ch8yqhs9dq6",
                            "name": "Cerby",
                            "infoURL": "http://www.radixdlt.com",
                            "totalDelegatedStake": "100",
                            "ownerDelegation": "100",
                            "isExternalStakeAccepted": true
                        }
                    }
                }
            ]
        },
        {
            "name": "radix.buildTransaction",
            "summary": "Get an unsigned transaction.",
            "params": [
                {
                    "name": "actions",
                    "required": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/actions"
                        }
                    }
                },
                {
                    "name": "message",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "transaction",
                "schema": {
                    "type": "object",
                    "properties": {
                        "transaction": {
                            "type": "object",
                            "properties": {
                                "blob": {
                                    "type": "string"
                                },
                                "hashOfBlobToSign": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "blob",
                                "hashOfBlobToSign"
                            ]
                        },
                        "fee": {
                            "$ref": "#/components/schemas/amount"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "transaction",
                        "fee"
                    ]
                }
            },
            "errors": [
                {
                    "code": 1300,
                    "message": "MALFORMED_TX"
                },
                {
                    "code": 1301,
                    "message": "INSUFFICIENT_FUNDS"
                },
                {
                    "code": 1302,
                    "message": "NOT_PERMITTED"
                },
                {
                    "code": 1303,
                    "message": "ADDRESS_IS_MISSING"
                },
                {
                    "code": 1304,
                    "message": "NOT_A_SYSTEM"
                },
                {
                    "code": 1305,
                    "message": "RRI_NOT_AVAILABLE"
                },
                {
                    "code": 1306,
                    "message": "ALREADY_A_VALIDATOR"
                },
                {
                    "code": 1307,
                    "message": "INVALID_STATE"
                },
                {
                    "code": 1308,
                    "message": "NO_SYSTEM_PARTICLE"
                },
                {
                    "code": 1309,
                    "message": "NOT_ENOUGH_STAKED"
                },
                {
                    "code": 1310,
                    "message": "NEXT_VIEW_LE_CURRENT"
                },
                {
                    "code": 1311,
                    "message": "ALREADY_UNREGISTERED"
                },
                {
                    "code": 1312,
                    "message": "INSUFFICIENT_FUNDS_FOR_FEE"
                },
                {
                    "code": 1313,
                    "message": "DIFFERENT_SOURCE_ADDRESSES"
                },
                {
                    "code": 1314,
                    "message": "INVALID_ACTION"
                },
                {
                    "code": 1315,
                    "message": "INVALID_ACTION_TYPE"
                },
                {
                    "code": 1316,
                    "message": "INVALID_RRI"
                },
                {
                    "code": 1317,
                    "message": "INVALID_ADDRESS"
                },
                {
                    "code": 1318,
                    "message": "INVALID_VALIDATOR_ADDRESS"
                },
                {
                    "code": 1319,
                    "message": "INVALID_AMOUNT"
                }
            ]
        },
        {
            "name": "radix.finalizeTransaction",
            "summary": "Finalizes a signed transaction before submitting it.",
            "params": [
                {
                    "name": "transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "blob": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "blob"
                        ]
                    }
                },
                {
                    "name": "signatureDER",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "publicKeyOfSigner",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "result": {
                "name": "finalizeResult",
                "schema": {
                    "type": "object",
                    "properties": {
                        "txID": {
                            "$ref": "#/components/schemas/txID"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "txID"
                    ]
                }
            }
        },
        {
            "name": "radix.submitTransaction",
            "summary": "Submits a transaction to be dispatched to Radix network.",
            "params": [
                {
                    "name": "transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "blob": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "blob"
                        ],
                        "additionalProperties": false
                    }
                },
                {
                    "name": "signatureDER",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "publicKeyOfSigner",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "txID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/txID"
                    }
                }
            ],
            "result": {
                "name": "submissionResult",
                "schema": {
                    "type": "object",
                    "properties": {
                        "txID": {
                            "$ref": "#/components/schemas/txID"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "txID"
                    ]
                }
            },
            "errors": [
                {
                    "code": 1500,
                    "message": "SUBMISSION_FAILURE"
                }
            ]
        }
    ],
    "components": {
        "schemas": {
            "actions": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "TokenTransfer"
                                ]
                            },
                            "from": {
                                "$ref": "#/components/schemas/address"
                            },
                            "to": {
                                "$ref": "#/components/schemas/address"
                            },
                            "amount": {
                                "$ref": "#/components/schemas/amount"
                            },
                            "rri": {
                                "$ref": "#/components/schemas/rri"
                            }
                        },
                        "required": [
                            "type",
                            "from",
                            "to",
                            "amount",
                            "rri"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "StakeTokens"
                                ]
                            },
                            "from": {
                                "$ref": "#/components/schemas/address"
                            },
                            "validator": {
                                "$ref": "#/components/schemas/validatorAddress"
                            },
                            "amount": {
                                "$ref": "#/components/schemas/amount"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "from",
                            "validator",
                            "amount"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "UnstakeTokens"
                                ]
                            },
                            "from": {
                                "$ref": "#/components/schemas/address"
                            },
                            "validator": {
                                "$ref": "#/components/schemas/validatorAddress"
                            },
                            "amount": {
                                "$ref": "#/components/schemas/amount"
                            }
                        },
                        "required": [
                            "type",
                            "from",
                            "validator",
                            "amount"
                        ],
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Other"
                                ]
                            }
                        },
                        "required": [
                            "type"
                        ],
                        "additionalProperties": false
                    }
                ]
            },
            "transaction": {
                "type": "object",
                "properties": {
                    "txID": {
                        "$ref": "#/components/schemas/txID"
                    },
                    "sentAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fee": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "message": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/actions"
                        }
                    }
                },
                "required": [
                    "txID",
                    "sentAt",
                    "fee",
                    "actions"
                ]
            },
            "validator": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/validatorAddress"
                    },
                    "ownerAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "name": {
                        "type": "string"
                    },
                    "infoURL": {
                        "$ref": "#/components/schemas/url"
                    },
                    "totalDelegatedStake": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "ownerDelegation": {
                        "$ref": "#/components/schemas/amount"
                    },
                    "isExternalStakeAccepted": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "address",
                    "ownerAddress",
                    "name",
                    "infoURL",
                    "totalDelegatedStake",
                    "ownerDelegation",
                    "isExternalStakeAccepted"
                ]
            },
            "int32": {
                "type": "integer",
                "minimum": -2147483648,
                "maximum": 2147483648
            },
            "networkId": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1
            },
            "amount": {
                "type": "string",
                "pattern": "^[0-9]+$"
            },
            "rri": {
                "type": "string",
                "pattern": "^[!\\\"#$%&'()*+,-.\\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\[\\\\\\]\\^_`abcdefghijklmnopqrstuvwxyz{|}~]{1,83}_r[rb]1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,90}$"
            },
            "url": {
                "type": "string",
                "pattern": "^https?:\/\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$"
            },
            "address": {
                "type": "string",
                "pattern": "^(brx|rdx)1qsp[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{58}$"
            },
            "validatorAddress": {
                "type": "string",
                "pattern": "^v[rb]1q[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,90}$"
            },
            "txID": {
                "type": "string",
                "pattern": "^[0123456789abcfed]{64}$",
                "maxLength": 64,
                "minLength": 64
            }
        },
        "responses": {
            "tokenInfo": {
                "name": "tokenInfo",
                "schema": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "rri": {
                            "$ref": "#/components/schemas/rri"
                        },
                        "symbol": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "granularity": {
                            "$ref": "#/components/schemas/amount"
                        },
                        "isSupplyMutable": {
                            "type": "boolean"
                        },
                        "currentSupply": {
                            "$ref": "#/components/schemas/amount"
                        },
                        "tokenInfoURL": {
                            "$ref": "#/components/schemas/url"
                        },
                        "iconURL": {
                            "$ref": "#/components/schemas/url"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "name",
                        "rri",
                        "symbol",
                        "granularity",
                        "isSupplyMutable",
                        "currentSupply",
                        "tokenInfoURL",
                        "iconURL"
                    ]
                }
            }
        }
    }
}