/* tslint:disable */
/* eslint-disable */
/**
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountIdentifier,
    AccountIdentifierFromJSON,
    AccountIdentifierFromJSONTyped,
    AccountIdentifierToJSON,
    Action,
    ActionFromJSON,
    ActionFromJSONTyped,
    ActionToJSON,
    BurnTokensAllOf,
    BurnTokensAllOfFromJSON,
    BurnTokensAllOfFromJSONTyped,
    BurnTokensAllOfToJSON,
    TokenAmount,
    TokenAmountFromJSON,
    TokenAmountFromJSONTyped,
    TokenAmountToJSON,
} from './';

/**
 * 
 * @export
 * @interface BurnTokens
 */
export interface BurnTokens extends Action {
    /**
     * 
     * @type {AccountIdentifier}
     * @memberof BurnTokens
     */
    from: AccountIdentifier;
    /**
     * 
     * @type {TokenAmount}
     * @memberof BurnTokens
     */
    amount: TokenAmount;
}

export function BurnTokensFromJSON(json: any): BurnTokens {
    return BurnTokensFromJSONTyped(json, false);
}

export function BurnTokensFromJSONTyped(json: any, ignoreDiscriminator: boolean): BurnTokens {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ActionFromJSONTyped(json, ignoreDiscriminator),
        'from': AccountIdentifierFromJSON(json['from']),
        'amount': TokenAmountFromJSON(json['amount']),
    };
}

export function BurnTokensToJSON(value?: BurnTokens | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ActionToJSON(value),
        'from': AccountIdentifierToJSON(value.from),
        'amount': TokenAmountToJSON(value.amount),
    };
}

