/* tslint:disable */
/* eslint-disable */
/**
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
	AccountIdentifier,
	AccountIdentifierFromJSON,
	AccountIdentifierFromJSONTyped,
	AccountIdentifierToJSON,
	Action,
	ActionFromJSON,
	ActionFromJSONTyped,
	ActionToJSON,
	TokenAmount,
	TokenAmountFromJSON,
	TokenAmountFromJSONTyped,
	TokenAmountToJSON,
	TransferTokensAllOf,
	TransferTokensAllOfFromJSON,
	TransferTokensAllOfFromJSONTyped,
	TransferTokensAllOfToJSON,
} from '.'

/**
 *
 * @export
 * @interface TransferTokens
 */
export interface TransferTokens extends Action {
	/**
	 *
	 * @type {AccountIdentifier}
	 * @memberof TransferTokens
	 */
	from: AccountIdentifier
	/**
	 *
	 * @type {AccountIdentifier}
	 * @memberof TransferTokens
	 */
	to: AccountIdentifier
	/**
	 *
	 * @type {TokenAmount}
	 * @memberof TransferTokens
	 */
	amount: TokenAmount
}

export function TransferTokensFromJSON(json: any): TransferTokens {
	return TransferTokensFromJSONTyped(json, false)
}

export function TransferTokensFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean,
): TransferTokens {
	if (json === undefined || json === null) {
		return json
	}
	return {
		...ActionFromJSONTyped(json, ignoreDiscriminator),
		from: AccountIdentifierFromJSON(json['from']),
		to: AccountIdentifierFromJSON(json['to']),
		amount: TokenAmountFromJSON(json['amount']),
	}
}

export function TransferTokensToJSON(value?: TransferTokens | null): any {
	if (value === undefined) {
		return undefined
	}
	if (value === null) {
		return null
	}
	return {
		...ActionToJSON(value),
		from: AccountIdentifierToJSON(value.from),
		to: AccountIdentifierToJSON(value.to),
		amount: TokenAmountToJSON(value.amount),
	}
}
