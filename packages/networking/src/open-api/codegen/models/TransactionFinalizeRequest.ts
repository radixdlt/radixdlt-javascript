/* tslint:disable */
/* eslint-disable */
/**
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
	TransactionFinalizeRequestSignature,
	TransactionFinalizeRequestSignatureFromJSON,
	TransactionFinalizeRequestSignatureFromJSONTyped,
	TransactionFinalizeRequestSignatureToJSON,
} from '.'

/**
 *
 * @export
 * @interface TransactionFinalizeRequest
 */
export interface TransactionFinalizeRequest {
	/**
	 *
	 * @type {string}
	 * @memberof TransactionFinalizeRequest
	 */
	network: string
	/**
	 *
	 * @type {string}
	 * @memberof TransactionFinalizeRequest
	 */
	unsignedTransaction: string
	/**
	 *
	 * @type {TransactionFinalizeRequestSignature}
	 * @memberof TransactionFinalizeRequest
	 */
	signature: TransactionFinalizeRequestSignature
	/**
	 *
	 * @type {boolean}
	 * @memberof TransactionFinalizeRequest
	 */
	submit?: boolean
}

export function TransactionFinalizeRequestFromJSON(
	json: any,
): TransactionFinalizeRequest {
	return TransactionFinalizeRequestFromJSONTyped(json, false)
}

export function TransactionFinalizeRequestFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean,
): TransactionFinalizeRequest {
	if (json === undefined || json === null) {
		return json
	}
	return {
		network: json['network'],
		unsignedTransaction: json['unsigned_transaction'],
		signature: TransactionFinalizeRequestSignatureFromJSON(
			json['signature'],
		),
		submit: !exists(json, 'submit') ? undefined : json['submit'],
	}
}

export function TransactionFinalizeRequestToJSON(
	value?: TransactionFinalizeRequest | null,
): any {
	if (value === undefined) {
		return undefined
	}
	if (value === null) {
		return null
	}
	return {
		network: value.network,
		unsigned_transaction: value.unsignedTransaction,
		signature: TransactionFinalizeRequestSignatureToJSON(value.signature),
		submit: value.submit,
	}
}
