/* tslint:disable */
/* eslint-disable */
/**
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
	AccountTransactionMetadata,
	AccountTransactionMetadataFromJSON,
	AccountTransactionMetadataFromJSONTyped,
	AccountTransactionMetadataToJSON,
	AccountTransactionStatus,
	AccountTransactionStatusFromJSON,
	AccountTransactionStatusFromJSONTyped,
	AccountTransactionStatusToJSON,
	Action,
	ActionFromJSON,
	ActionFromJSONTyped,
	ActionToJSON,
	TokenAmount,
	TokenAmountFromJSON,
	TokenAmountFromJSONTyped,
	TokenAmountToJSON,
	TransactionIdentifier,
	TransactionIdentifierFromJSON,
	TransactionIdentifierFromJSONTyped,
	TransactionIdentifierToJSON,
} from '.'

/**
 *
 * @export
 * @interface AccountTransaction
 */
export interface AccountTransaction {
	/**
	 *
	 * @type {AccountTransactionStatus}
	 * @memberof AccountTransaction
	 */
	transactionStatus: AccountTransactionStatus
	/**
	 *
	 * @type {TransactionIdentifier}
	 * @memberof AccountTransaction
	 */
	transactionIdentifier: TransactionIdentifier
	/**
	 *
	 * @type {Array<Action>}
	 * @memberof AccountTransaction
	 */
	actions: Array<Action>
	/**
	 *
	 * @type {TokenAmount}
	 * @memberof AccountTransaction
	 */
	feePaid: TokenAmount
	/**
	 *
	 * @type {AccountTransactionMetadata}
	 * @memberof AccountTransaction
	 */
	metadata: AccountTransactionMetadata
}

export function AccountTransactionFromJSON(json: any): AccountTransaction {
	return AccountTransactionFromJSONTyped(json, false)
}

export function AccountTransactionFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean,
): AccountTransaction {
	if (json === undefined || json === null) {
		return json
	}
	return {
		transactionStatus: AccountTransactionStatusFromJSON(
			json['transaction_status'],
		),
		transactionIdentifier: TransactionIdentifierFromJSON(
			json['transaction_identifier'],
		),
		actions: (json['actions'] as Array<any>).map(ActionFromJSON),
		feePaid: TokenAmountFromJSON(json['fee_paid']),
		metadata: AccountTransactionMetadataFromJSON(json['metadata']),
	}
}

export function AccountTransactionToJSON(
	value?: AccountTransaction | null,
): any {
	if (value === undefined) {
		return undefined
	}
	if (value === null) {
		return null
	}
	return {
		transaction_status: AccountTransactionStatusToJSON(
			value.transactionStatus,
		),
		transaction_identifier: TransactionIdentifierToJSON(
			value.transactionIdentifier,
		),
		actions: (value.actions as Array<any>).map(ActionToJSON),
		fee_paid: TokenAmountToJSON(value.feePaid),
		metadata: AccountTransactionMetadataToJSON(value.metadata),
	}
}
