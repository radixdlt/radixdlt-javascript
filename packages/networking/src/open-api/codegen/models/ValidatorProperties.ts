/* tslint:disable */
/* eslint-disable */
/**
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
	AccountIdentifier,
	AccountIdentifierFromJSON,
	AccountIdentifierFromJSONTyped,
	AccountIdentifierToJSON,
} from '.'

/**
 *
 * @export
 * @interface ValidatorProperties
 */
export interface ValidatorProperties {
	/**
	 *
	 * @type {string}
	 * @memberof ValidatorProperties
	 */
	url: string
	/**
	 *
	 * @type {string}
	 * @memberof ValidatorProperties
	 */
	validatorFee: string
	/**
	 *
	 * @type {string}
	 * @memberof ValidatorProperties
	 */
	name: string
	/**
	 *
	 * @type {boolean}
	 * @memberof ValidatorProperties
	 */
	registered: boolean
	/**
	 *
	 * @type {AccountIdentifier}
	 * @memberof ValidatorProperties
	 */
	ownerAccountIdentifier: AccountIdentifier
	/**
	 *
	 * @type {boolean}
	 * @memberof ValidatorProperties
	 */
	externalStakeAccepted: boolean
}

export function ValidatorPropertiesFromJSON(json: any): ValidatorProperties {
	return ValidatorPropertiesFromJSONTyped(json, false)
}

export function ValidatorPropertiesFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean,
): ValidatorProperties {
	if (json === undefined || json === null) {
		return json
	}
	return {
		url: json['url'],
		validatorFee: json['validator_fee'],
		name: json['name'],
		registered: json['registered'],
		ownerAccountIdentifier: AccountIdentifierFromJSON(
			json['owner_account_identifier'],
		),
		externalStakeAccepted: json['external_stake_accepted'],
	}
}

export function ValidatorPropertiesToJSON(
	value?: ValidatorProperties | null,
): any {
	if (value === undefined) {
		return undefined
	}
	if (value === null) {
		return null
	}
	return {
		url: value.url,
		validator_fee: value.validatorFee,
		name: value.name,
		registered: value.registered,
		owner_account_identifier: AccountIdentifierToJSON(
			value.ownerAccountIdentifier,
		),
		external_stake_accepted: value.externalStakeAccepted,
	}
}
